#!/usr/bin/env python3

import hashlib
import os
import sys
from functools import partial
from html.parser import HTMLParser
from urllib import request


URL = 'http://truetimestamp.org/submit.php?auto=1&hash='


class TrueTimestampParser(HTMLParser):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.textarea = None
        self.certificate = None

    def handle_starttag(self, tag, attrs):
        if tag == 'textarea':
            self.textarea = []

    def handle_endtag(self, tag):
        if tag == 'textarea':
            self.certificate = ''.join(self.textarea)

    def handle_data(self, data):
        if self.textarea is not None:
            self.textarea.append(data)


def sha256digest(fo, bufsize=4096):
    digest = hashlib.sha256()
    for buf in iter(partial(fo.read, bufsize), b''):
        digest.update(buf)
    return digest.hexdigest()


def timestamp(digest):
    html = request.urlopen(URL + digest).read()
    parser = TrueTimestampParser()
    parser.feed(html.decode('utf-8'))
    parser.close()
    return parser.certificate


def main():
    if len(sys.argv) == 1:
        sys.stdout.write(timestamp(sha256digest(sys.stdin)))
        sys.stdout.write('\n')
        return
    for arg in sys.argv[1:]:
        with open(arg, 'rb') as fo:
            digest = sha256digest(fo)
        certificate = timestamp(digest)
        if certificate:
            with open("{}.txt".format(arg), 'w') as fo:
                fo.write(certificate)
        else:
            print("Could not locate certificate in HTML", file=sys.stderr)
            sys.exit(1)


if __name__ == '__main__':
    main()
